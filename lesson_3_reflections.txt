When would you want to use a remote repository rather than keeping all your work
local?
    I want to use a remote repository rather than keeping all my work local when I want any of this to be seen by anybody else. I remote repository is stored on a code hosting service like GitHub or on an internal server.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
    I want to pull changes manually rather than having Git automatically stay
up-to-date with my remote repository because in that way my code doesn't change
without me expecting it. 

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

   Forks are local instantiations that let you make changes to someone else's
codebase. Clones are copies of all code on the master branch. It is an exact
replica of the code on github. Branches are a slightly changed or modified
section of code that meets different objectives.

What is the benefit of having a copy of the last known state of the remote
stored locally?

Remote tracking branches are local copies of remote branches. They PRESERVE
THE STATE of remote branches AS IT WAS during the initial clone or last fetch
operation. The point of creating remote tracking branches is very simple:
whenever you want to check the state of remote branch you should consult a
remote tracking branch.The remote tracking branches are treated as read only.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
